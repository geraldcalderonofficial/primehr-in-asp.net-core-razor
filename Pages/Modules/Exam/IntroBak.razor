@page "/Questionnaire"

@using HRMSv4.Client.Shared.MainComponents
@using HRMSv4.Shared.Exam
@using System.Globalization
@inject IExam service
<!-- Intro Quizzes -->
<div style=" position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%);">
    <div class="container-lg">
        <a href="/" style="cursor: pointer;"><div class="app-logo-inverse mx-auto mb-3" style="height:52px!important; width:200px !important"></div></a>
    </div>
    <div class="container-lg" style="margin-top: 10px;">
        <div class="main-card mb-3 card" style="margin-bottom: unset !important;" hidden=@ShowIntro>
            <div class="main-card mb-3 card-border card" style="padding: 15px; margin-bottom: unset !important; box-shadow: unset !important; border-width: 0 !important">

                <div class="display-flex flex-column pt3">
                    <div>
                        <div class="myHeading">
                            <div class="font-icon-wrapper font-icon-lg">
                                <i class="pe-7s-box2 icon-gradient bg-amy-crisp"> </i>
                            </div>
                            <h1 class="t-20 t-bold">
                                @examStatistics.JobTitle Assessment
                            </h1>
                            <div class="t-8">
                                <span>
                                    @JobDescription
                                </span>
                            </div>
                        </div>
                    </div>

                    <div style="margin-top: 30px;">
                        @if (examStatistics != null)
                        {
                            if (examStatistics.ListOfTypes != null)
                            {
                                if (examStatistics.ListOfTypes.Count() > 0)
                                {
                                    foreach (var item in examStatistics.ListOfTypes)
                                    {
                                        <div class="mv2 display-flex flex-row align-items-center">
                                            <li-icon aria-hidden="true" type="text-bulleted-list" class="mr3 jobs-talent-highlight-skill-assessments-intro-page-description-icon" size="medium">
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" data-supported-dps="24x24" fill="currentColor" class="mercado-match" width="24" height="24" focusable="false">
                                                    <path d="M7 4a2 2 0 11-2-2 2 2 0 012 2zm2-1v2h12V3zm-4 7a2 2 0 102 2 2 2 0 00-2-2zm4 3h12v-2H9zm-4 5a2 2 0 102 2 2 2 0 00-2-2zm4 3h12v-2H9z"></path>
                                                </svg>
                                            </li-icon>
                                            <span>
                                                <span class="t-bold">@item.Count</span>&nbsp;@item.TypeName questions
                                            </span>
                                        </div>
                                    }
                                }
                            }
                        }
                        <div class="mv2 display-flex flex-row align-items-center">
                            <li-icon aria-hidden="true" type="clock" class="mr3 jobs-talent-highlight-skill-assessments-intro-page-description-icon" size="medium">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" data-supported-dps="24x24" fill="currentColor" class="mercado-match" width="24" height="24" focusable="false">
                                    <g>
                                        <path d="M2 12A10 10 0 1012 2 10 10 0 002 12zm2 0a8 8 0 118 8 8 8 0 01-8-8z"></path>
                                        <path d="M15.1 12.63L13 11.42V7a1 1 0 00-2 0v5a1 1 0 00.51.85l2.59 1.52a1 1 0 101-1.74z"></path>
                                    </g>
                                </svg>
                            </li-icon>
                            <span>
                                <span class="t-bold">1.5 minutes</span>&nbsp;per question
                            </span>
                        </div>
                        <div class="mv2 display-flex flex-row align-items-center">
                            <li-icon aria-hidden="true" type="clipboard-check" class="mr3 jobs-talent-highlight-skill-assessments-intro-page-description-icon" size="medium">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" data-supported-dps="24x24" fill="currentColor" class="mercado-match" width="24" height="24" focusable="false">
                                    <path d="M14.73 10H17l-5.5 8L8 14.5l1.34-1.34L11.21 15zM20 3v16a3 3 0 01-3 3H7a3 3 0 01-3-3V3h5.69l.52-1A2 2 0 0112 1a2 2 0 011.76 1l.52 1zm-2 2h-2.6l.6 1.1V7H8v-.9L8.6 5H6v14a1 1 0 001 1h10a1 1 0 001-1z"></path>
                                </svg>
                            </li-icon>
                            <span>
                                Score in the top&nbsp;<span class="t-bold">30%</span>&nbsp;to earn a badge
                            </span>
                        </div>
                    </div>

                    <hr class="artdeco-divider mb0 mt4">

                    <h2 class="mt5 mb2 t-18 t-bold">
                        Before you start
                    </h2>
                    <ul class="pv-detail-assessments__intro-instructions-list t-14">
                        <li class="mv2">You must complete this assessment in one session — make sure your internet is reliable.</li>
                        <li class="mv2"><span class="t-bold">You can retake this assessment once</span> if you don’t earn a badge.</li>
                        <li class="mv2">We won’t show your results to anyone without your permission.</li>
                    </ul>
                </div>

                <div class="footer">
                    <div class="text-center">
                        <button class=" mb-2 me-2 btn-icon btn-pill btn btn-outline-success" @onclick="StartHandlerClick">
                            @*@onclick="() => selected = Array.IndexOf(comptypes, item)"*@
                            <i class="lnr-chevron-right-circle btn-icon-wrapper"></i>Start Examination
                        </button>
                    </div>
                </div>
            </div>
        </div>

        @*Questionaire*@
        @if (ShowQuestionaire)
        {
            @GetRenderFragment(comptypes[selected])
        }
    </div>
</div>

@code {
    [Parameter]
    public int ApplicantExamId { get; set; }

    private int selected { get; set; } = 0;

    private string JobPosition { get; set; } = string.Empty;
    private string JobDescription { get; set; } = string.Empty;
    private bool ShowIntro { get; set; } = false;
    private bool ShowQuestionaire { get; set; } = false;

    private ExamStatistics examStatistics = new ExamStatistics();

    private int questionResults = 0;

    RenderFragment GetRenderFragment(Type type)
    {
        RenderFragment renderFragment = renderTreeBuilder =>
        {
            renderTreeBuilder.OpenComponent(0, type);
            renderTreeBuilder.AddAttribute(1, "ApplicantExamId", ApplicantExamId);
            renderTreeBuilder.CloseComponent();
        };
        return renderFragment;
    }

    ComponentBase[] components = {
        new QuestionnaireBak()
    };

    Type[] comptypes => components.Select(c => c.GetType()).ToArray();

    protected override async Task OnInitializedAsync()
    {
        examStatistics = await service.GetExamStatistic(16);
    }

    async void StartHandlerClick()
    {
        ShowQuestionaire = true;
        ShowIntro = true;

        if (comptypes != null)
        {
            foreach (var item in comptypes)
            {
                if (item.Name == "QuestionnaireBak")
                {
                    selected = Array.IndexOf(comptypes, item);
                }
            }
        }

        StateHasChanged();
    }

}
