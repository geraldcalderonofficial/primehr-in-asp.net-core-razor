@page "/recruitmentplan-detail/{id}"
@inject IRecruitmentPlan service
@using DevExpress.Blazor
@using HRMSv4.Client.Shared.Modals.RecruitmentModals
@inject IAddress psgcService

<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <h3>
                Recruitment Plan Detail
            </h3>
        </div>
        <div class="page-title-actions">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/annualrecruitmentplan">Recruitment Plans</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Detail</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-3 col-sm-12">
        <div class="card-shadow-primary card-border mb-3 card">
            <div class="p-3">
                <div class="card-header">
                    Recruitment Plan
                    <div class="btn-actions-pane-right actions-icon-btn">
                        <button class="btn-icon btn-icon-only btn btn-link" @onclick="()=>Edit()">
                            <i class="ion-android-create btn-icon-wrapper"></i>
                        </button>
                    </div>
                </div>
                <ul class="rm-list-borders list-group list-group-flush">
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">
                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.Year</div>
                                    <div class="widget-subheading">Year</div>
                                </div>

                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">

                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.FirstStrategy</div>
                                    <div class="widget-subheading">Strategy</div>
                                </div>

                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">

                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.FirstDescription</div>
                                    <div class="widget-subheading">Description</div>
                                </div>

                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">

                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.FirstIndividualResponsible</div>
                                    <div class="widget-subheading">Individual Responsible</div>
                                </div>

                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">

                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.ConspicuousPlace1</div>
                                    <div class="widget-subheading">Conspicuous 1</div>
                                </div>

                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">

                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.ConspicuousPlace2</div>
                                    <div class="widget-subheading">Conspicuous 2</div>
                                </div>

                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="widget-content p-0">
                            <div class="widget-content-wrapper">

                                <div class="widget-content-left">
                                    <div class="widget-heading">@rp.ConspicuousPlace3</div>
                                    <div class="widget-subheading">Conspicuous 3</div>
                                </div>

                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-lg-9 col-sm-12">
        <div class="mb-3 card">
            <div class="card-body">
                <ul class="tabs-animated-shadow tabs-animated nav">
                    <li class="nav-item">
                        <a role="tab"
                           class="nav-link active"
                           id="tab-c-0"
                           data-bs-toggle="tab"
                           @onclick="()=>selected = 0">
                            <span>Approaches</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a role="tab"
                           class="nav-link"
                           id="tab-c-1"
                           data-bs-toggle="tab"
                           @onclick="()=>selected = 1">
                            <span>Target Vacant Positions</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a role="tab"
                           class="nav-link"
                           id="tab-c-2"
                           data-bs-toggle="tab"
                           @onclick="()=>selected = 2">
                            <span>Possible Candidates</span>
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    @GetRenderFragment(types[selected])
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string id { get; set; } //recruitmentplanId
    [CascadingParameter] public IModalService Modal { get; set; }
    int selected { get; set; } = 0;
    List<string> tabs = new List<string>(new[] { "RpApproaches", "RpTargetPositions", "RpCandidates" });
    RecruitmentPlan rp = new RecruitmentPlan();
    int recruitmentPlanId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        string DecodedUrl = string.Empty;
        string paramId = _crypto.ConvertHexToString(id, System.Text.Encoding.Unicode);
        recruitmentPlanId = int.Parse(paramId);

        if (!string.IsNullOrWhiteSpace(paramId))
        {
            rp = await service.GetRecruitmentPlanById(recruitmentPlanId);
            StateHasChanged();
        }
    }

    RenderFragment GetRenderFragment(Type type)
    {
        RenderFragment renderFragment = renderTreeBuilder =>
        {
            renderTreeBuilder.OpenComponent(0, type);
            renderTreeBuilder.AddAttribute(1, "id", id);
            renderTreeBuilder.CloseComponent();
        };
        return renderFragment;
    }

    ComponentBase[] components = {
        new RpApproaches(),
        new RpTargetPositions(),
        new RpCandidates(),
    };

    Type[] types => components.Select(c => c.GetType()).ToArray();


    async void Edit()
    {
        var options = new ModalOptions()
            {
                DisableBackgroundCancel = true
            };

        var parameters = new ModalParameters();
        parameters.Add(nameof(HRMSv4.Client.Shared.Modals.RecruitmentModals.RecruitmentPlanModal.RecruitmentPlanId), recruitmentPlanId);

        var _modalStatus = Modal.Show<HRMSv4.Client.Shared.Modals.RecruitmentModals.RecruitmentPlanModal>("Edit Recruitment Plan", parameters, options);
        var modalResult = await _modalStatus.Result;
        if (!modalResult.Cancelled)
        {
            rp = await service.GetRecruitmentPlanById(recruitmentPlanId);
            StateHasChanged();
        }
    }
}
