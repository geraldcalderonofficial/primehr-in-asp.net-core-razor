@using HRMSv4.Client.Interface.Premiums
@using HRMSv4.Client.Pages.Policy;
@using HRMSv4.Shared.HrPolicy
@using DevExpress.Blazor
@inject IGeneralPolicy service
@inject IPlantilla plantillaService
@inject ISalaryGrade sgService


<div class="tab-pane active show" id="general">
    <div class="row" id=viewGeneral hidden="@hideView">
        <div class="col-sm-12">
            <div class="">
                <div class="card-header">
                    <h5 class="card-header-text">General Policy</h5>
                    <div class="btn-actions-pane-right text-capitalize">
                        <button class="btn-wide btn-outline-2x me-md-2 btn btn-outline-focus btn-sm" onclick="@ToEdit"><i class="pe-7s-note"></i></button>
                    </div>
                </div>
                <div class="card-block" style="padding:1.25rem">
                    <div id="view-info" class="row col-12">
                        <div class="col-6">
                            <div class="row mb-2">
                                <h5>Salary Grade</h5>
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">Plantilla Effectivity Date</div>
                                </div>
                                <div class="col-md-8">
                                    <label class="form-label">@gpView.PlantillaSalaryGradeEffectivityDate</label>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <h5>Salary Grade</h5>
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">Non-Plantilla Effectivity Date</div>
                                </div>
                                <div class="col-md-8">
                                    <label class="form-label">@gpView.NonPlantillaSalaryGradeEffectivityDate</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="row mb-2">
                                <h5>Taxable Bonus</h5>
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">Amount</div>
                                </div>
                                <div class="col-md-8">
                                    <label class="form-label">@gpView.TaxableBonusAmount</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row col-12">
                        <h5>Premiums</h5>
                        <div class="row mb-2 col-12">
                            <div class="col-6">
                                <div class="row mb-2">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <div class="text-muted">Philhealth Year</div>
                                    </div>
                                    <div class="col-md-8">
                                        <label class="form-label">@gpView.PhilHealthYear</label>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <div class="text-muted">HDMF Year</div>
                                    </div>
                                    <div class="col-md-8">
                                        <label class="form-label">@gpView.HdmfYear</label>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <div class="text-muted">Withholding Tax Year</div>
                                    </div>
                                    <div class="col-md-8">
                                        <label class="form-label">@gpView.WithHoldingTaxYear</label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="row mb-2">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <div class="text-muted">SSS Year</div>
                                    </div>
                                    <div class="col-md-8">
                                        <label class="form-label">@gpView.SssYear</label>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <div class="text-muted">GSIS Year</div>
                                    </div>
                                    <div class="col-md-8">
                                        <label class="form-label">@gpView.GsisYear</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row col-12">
                        <h5>Position Item</h5>
                        <div class="row mb-2 col-12">
                            <div class="col-6">
                                <div class="row mb-2">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <div class="text-muted">Plantilla Year</div>
                                    </div>
                                    <div class="col-md-8">
                                        <label class="form-label">@gpView.PlantillaYear</label>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    @*<EditForm class="row" id=editGeneral  Model="@gp">*@
    <div class="col-sm-12" hidden="@hideEdit">
        <div class="">
            <div class="card-header">
                <h5 class="card-header-text">General Policy</h5>
                <div class="btn-actions-pane-right text-capitalize">
                </div>
            </div>
            <div class="card-block" style="padding:1.25rem">
                <div id="view-info" class="row col-12">
                    <div class="col-6">
                        <div class="row mb-2">
                            <h5>Salary Grade</h5>
                            <div class="col-md-4 align-items-center d-flex">
                                <div class="text-muted">Plantilla Effectivity Date</div>
                            </div>
                            <div class="col-md-8">
                                <DxComboBox Data="@sgPlantillaEfList" SizeMode="SizeMode.Medium"
                                            TextFieldName="@nameof(SalaryGradeEffectivityDatesView.DateString)"
                                            @bind-Value="@selectedPlantilla"
                                            CssClass="cw-480" />

                            </div>
                            <div class="col-md-8" hidden="@validationSgP">
                                <div class="text-muted float-right" style="margin-right:75px;color:red;">New salary grades detected</div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-md-4 align-items-center d-flex">
                                <div class="text-muted">Non-Plantilla Effectivity Date</div>
                            </div>
                            <div class="col-md-8">
                                <DxComboBox Data="@sgNonPlantillaEfList" SizeMode="SizeMode.Medium"
                                            TextFieldName="@nameof(SalaryGradeEffectivityDatesView.DateString)"
                                            @bind-Value="@selectedNonPlantilla"
                                            CssClass="cw-480" />

                            </div>
                            <div class="col-md-8" hidden="@validationSgNp">
                                <div class="text-muted float-right" style="margin-right:75px;color:red;">New salary grades detected</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="row mb-2">
                            <h5>Taxable Bonus</h5>
                            <div class="col-md-4 align-items-center d-flex">
                                <div class="text-muted">Amount</div>
                            </div>
                            <div class="col-md-8">
                                <DxMaskedInput @bind-Value="gp.TaxableBonusAmount"
                                               CssClass="cw-320"
                                               Mask="n2">
                                </DxMaskedInput>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="col-6">
                    <div class="row mb-2">
                        <h5>Plantilla Year</h5>
                        <div class="col-md-4 align-items-center d-flex">
                            <div class="text-muted">Plantilla Year</div>
                        </div>
                        <div class="col-md-8">
                            <DxComboBox Data="@yrList" SizeMode="SizeMode.Medium"
                                        @bind-Value="@yearTo"
                                        CssClass="cw-480" />
                        </div>
                    </div>
                </div>

                <div class="row col-12">
                    <h5>Premiums</h5>
                    <div class="row mb-2 col-12">
                        <div class="col-6">
                            <div class="row mb-2">
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">Philhealth Year</div>
                                </div>
                                <div class="col-md-8">
                                    <DxComboBox Data="@philhealthDateList" SizeMode="SizeMode.Medium"
                                                TextFieldName="@nameof(GeneralPolicyDateView.DateString)"
                                                @bind-Value="@selectedPhilhealthDate"
                                                CssClass="cw-480" />
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">HDMF Year</div>
                                </div>
                                <div class="col-md-8">
                                    <DxComboBox Data="@hdmfhDateList" SizeMode="SizeMode.Medium"
                                                TextFieldName="@nameof(GeneralPolicyDateView.DateString)"
                                                @bind-Value="@selectedHdmfDate"
                                                CssClass="cw-480" />
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">Withholding Tax Year</div>
                                </div>
                                <div class="col-md-8">
                                    <DxComboBox Data="@taxDateList" SizeMode="SizeMode.Medium"
                                                TextFieldName="@nameof(GeneralPolicyDateView.DateString)"
                                                @bind-Value="@selectedTaxDate"
                                                CssClass="cw-480" />
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="row mb-2">
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">SSS Year</div>
                                </div>
                                <div class="col-md-8">
                                    <DxComboBox Data="@sssDateList" SizeMode="SizeMode.Medium"
                                                TextFieldName="@nameof(GeneralPolicyDateView.DateString)"
                                                @bind-Value="@selectedSssDate"
                                                CssClass="cw-480" />
                                </div>
                            </div>
                          @*  <div class="row mb-2">
                                <div class="col-md-4 align-items-center d-flex">
                                    <div class="text-muted">GSIS Year</div>
                                </div>
                                <div class="col-md-8">
                                    <RadzenDatePicker @bind-Value="gp.GsisYear" DateFormat="d" Change=@(args => OnChange(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" style="width: 100%;" />
                                </div>
                            </div>*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="divider"></div>
            <div class="" style="display: unset !important;">
                <div class="float-end">
                    <button type="button" id="next-btn" class="btn-shadow btn-wide me-3 btn btn-outline-secondary" onclick="@Cancel">Cancel</button>
                    <button type="button" id="prev-btn" class="btn-shadow btn-wide btn btn-outline-primary" onclick="@Save">Save</button>
                </div>
            </div>
        </div>
    </div>
    @* </EditForm>*@

</div>

@code {
    bool hideEdit { get; set; } = true;
    bool hideView { get; set; } = false;

    HRMSv4.Shared.HrPolicy.GeneralPolicy gp = new HRMSv4.Shared.HrPolicy.GeneralPolicy();
    GeneralPolicyListView gpView = new GeneralPolicyListView();
    string userId = string.Empty;

    List<SalaryGradeEffectivityDatesView> sgPlantillaEfList = new List<SalaryGradeEffectivityDatesView>();
    List<SalaryGradeEffectivityDatesView> sgNonPlantillaEfList = new List<SalaryGradeEffectivityDatesView>();

    SalaryGradeEffectivityDatesView selectedPlantilla { get; set; }
    SalaryGradeEffectivityDatesView selectedNonPlantilla { get; set; }


    List<GeneralPolicyDateView> philhealthDateList = new List<GeneralPolicyDateView>();
    List<GeneralPolicyDateView> hdmfhDateList = new List<GeneralPolicyDateView>();
    List<GeneralPolicyDateView> sssDateList = new List<GeneralPolicyDateView>();
    List<GeneralPolicyDateView> gsisDateList = new List<GeneralPolicyDateView>();
    List<GeneralPolicyDateView> taxDateList = new List<GeneralPolicyDateView>();

    GeneralPolicyDateView selectedPhilhealthDate { get; set; }
    GeneralPolicyDateView selectedHdmfDate { get; set; }
    GeneralPolicyDateView selectedSssDate { get; set; }
    GeneralPolicyDateView selectedGsisDate { get; set; }
    GeneralPolicyDateView selectedTaxDate { get; set; }


    List<SelectListItems> yrList = new List<SelectListItems>();

    //sg updates
    bool validationSgP = true;
    bool validationSgNp = true;

    private string yearTo { get; set; }
    [CascadingParameter] public IModalService Modal { get; set; }



    protected override async Task OnInitializedAsync()
    {
        var user = (await _AutService.GetAuthenticationStateAsync()).User;
        userId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;

        gp = await service.Get();
        gpView = await service.GetView();
        gp.PlantillaSalaryGradeEffectivityDate = DateTime.Now;
        gp.NonPlantillaSalaryGradeEffectivityDate = DateTime.Now;

        int yearActive = DateTime.Now.Year;

        for (int i = yearActive - 30; i <= yearActive; i++)
        {
            var yearRow = new SelectListItems()
                {
                    Text = i.ToString(),
                    Value = i.ToString()
                };

            yrList.Add(yearRow);
            //Year.Add(i);
        }

        yrList = yrList.OrderByDescending(c => c.Value).ToList();

        var response = await plantillaService.PlantillaYear(userId);
        if (response.StatusCode == 200)
        {
            yearTo = response.Value.ToString();
        }


        StateHasChanged();
    }

    async void ToEdit()
    {
        hideEdit = false;
        hideView = true;
        gp = await service.Get();

        var plantillaSgDateList = await sgService.GetEffectivityDates(true);
        sgPlantillaEfList = plantillaSgDateList.Where(c => c.EffectivityDate >= gp.PlantillaSalaryGradeEffectivityDate).
        Select(c => new SalaryGradeEffectivityDatesView { EffectivityDate = c.EffectivityDate, DateString = c.EffectivityDate.ToShortDateString() }).DistinctBy(c => c.EffectivityDate).ToList();
        validationSgP = sgPlantillaEfList.Count() > 1 ? false : true;

        selectedPlantilla = sgPlantillaEfList.FirstOrDefault(a => a.EffectivityDate.Date == gp.PlantillaSalaryGradeEffectivityDate.Date);

        var nonPlantillaSgDateList = await sgService.GetEffectivityDates(false);
        sgNonPlantillaEfList = nonPlantillaSgDateList.Where(c => c.EffectivityDate >= gp.NonPlantillaSalaryGradeEffectivityDate).
        Select(c => new SalaryGradeEffectivityDatesView { EffectivityDate = c.EffectivityDate, DateString = c.EffectivityDate.ToShortDateString() }).DistinctBy(c => c.EffectivityDate).ToList();
        validationSgNp = sgNonPlantillaEfList.Count() > 1 ? false : true;

        selectedNonPlantilla = sgNonPlantillaEfList.FirstOrDefault(a => a.EffectivityDate.Date == gp.NonPlantillaSalaryGradeEffectivityDate.Date);

        philhealthDateList = await service.GetPhilHealthDates();
        hdmfhDateList = await service.GetHdmfDates();
        sssDateList = await service.GetSssDates();
        gsisDateList = await service.GetGsisDates();
        taxDateList = await service.GetTaxDates();

        selectedPhilhealthDate = philhealthDateList.FirstOrDefault(a => a.Date.Date.Year == gp.PhilHealthYear.Year);
        selectedHdmfDate = hdmfhDateList.FirstOrDefault(a => a.Date.Date.Year == gp.HdmfYear.Year);
        selectedSssDate = sssDateList.FirstOrDefault(a => a.Date.Date.Year == gp.SssYear.Year);
        selectedTaxDate = taxDateList.FirstOrDefault(a => a.Date.Date.Year == gp.WithHoldingTaxYear.Year);

        StateHasChanged();
    }

    void Cancel()
    {
        hideEdit = true;
        hideView = false;
        StateHasChanged();
    }

    async void Save()
    {
        var user = (await _AutService.GetAuthenticationStateAsync()).User;
        userId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;

        int yr = 0;
        //HttpResponseMessage res;
        var res = new Response();
        string msg = string.Empty;



        yr = yearTo != null && yearTo != "" ? int.Parse(yearTo) : 0;
        if (gp.GeneralPolicyId > 0)
        {

            SweetAlertResult result = await _Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Do you really want to update the policies?",
                    Text = "Warning this action cannot be undone.",
                    Icon = SweetAlertIcon.Question,
                    ShowCancelButton = true,
                    ConfirmButtonText = "Yes",
                    CancelButtonText = "No",
                    CancelButtonColor = "#999999"
                });

            if (result.IsConfirmed)
            {
                gp.UpdatedBy = userId;
                gp.PlantillaYear = yr;
                gp.PlantillaSalaryGradeEffectivityDate = selectedPlantilla.EffectivityDate;
                gp.NonPlantillaSalaryGradeEffectivityDate = selectedNonPlantilla.EffectivityDate;
                gp.PhilHealthYear = selectedPhilhealthDate.Date;
                gp.HdmfYear = selectedHdmfDate.Date;
                gp.SssYear = selectedSssDate.Date;
                gp.WithHoldingTaxYear = selectedTaxDate.Date;

                res = await service.Add(gp);
                //msg = "Record was successfully updated.";

                if (res.StatusCode == 200)
                {
                    DateTime currentSg = DateTime.Parse(gpView.PlantillaSalaryGradeEffectivityDate);

                    if (currentSg != gp.PlantillaSalaryGradeEffectivityDate)
                    {
                        var resultForm = await ShowProgressModal(1, gp.PlantillaSalaryGradeEffectivityDate);
                        if (resultForm)
                        {
                            Cancel();
                            StateHasChanged();

                            gpView = await service.GetView();
                            StateHasChanged();
                        }
                    }
                    else
                    {
                        Cancel();
                        StateHasChanged();

                        await _Swal.FireAsync("Success", res.Value, "success");

                        gpView = await service.GetView();
                        StateHasChanged();
                    }

                }
                else
                {
                    await _Swal.FireAsync("Oops...", res.Value, "error");
                }

            }
        }
        else
        {
            gp.CreatedBy = userId;
            gp.PlantillaYear = yr;
            res = await service.Add(gp);
            msg = "A new record was successfully added.";
        }

    }

    async Task<bool> ShowProgressModal(int plantillaProcess, DateTime plantillaSg)
    {
        var options = new ModalOptions()
            {
                DisableBackgroundCancel = true,
                Animation = ModalAnimation.FadeIn(0.2),
                HideCloseButton = true
            };

        var parameters = new ModalParameters();
        parameters.Add(nameof(SalaryEffectivityProgressModal.processPlantilla), plantillaProcess);
        parameters.Add(nameof(SalaryEffectivityProgressModal.plantillaSg), plantillaSg);

        var formModal = Modal.Show<SalaryEffectivityProgressModal>("Salary Effectivity Updates", parameters, options);
        var result = await formModal.Result;

        if (result.Cancelled == false)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
