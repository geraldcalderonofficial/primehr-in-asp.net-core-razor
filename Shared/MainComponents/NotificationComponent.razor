@*@page "/notificationtest"*@
@using HRMSv4.Client.Interface.Auth
@using HRMSv4.Client.Service
@using System.Security.Claims
@using HRMSv4.Client.Shared.Modals
@using HRMSv4.Shared.Audit
@using HRMSv4.Shared.SignalRData
@using Microsoft.AspNetCore.Components.Authorization
@inject ICompanyProfile companyService
@inject IHeader _header
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using System.Threading
@using Microsoft.AspNetCore.SignalR.Client
@implements IDisposable
@inject NavigationManager NavigationManager
@inject HubConnection HubConnection
@inject IEmployee empService
@inject ISignalR mailService;

<style>
    .timer {
        font-size: 20px;
        font-weight: 600;
        margin-right: 10px;
        margin-top: 16px;
        font-family: monospace;
    }
</style>

<div class="dropdown">
    @*<p class="timer">@theTime</p>*@
    <button type="button" @onclick="(() => ShowNotification())" aria-haspopup="true" aria-expanded="false" data-bs-toggle="dropdown" class="p-0 me-2 btn btn-link">
        <span class="icon-wrapper icon-wrapper-alt rounded-circle">
            <span class="icon-wrapper-bg bg-danger"></span>
            <i class="icon text-danger icon-anim-pulse ion-android-notifications" style="margin-left: 15px;"></i>
            <span class="badge rounded-pill bg-danger" style="margin-top: -25px; height: 20px; width: 20px; color: white; padding: 4px; border-radius: 10px; font-size: 12px;">@NotificationCount</span>
        </span>
    </button>


    <div tabindex="-1" role="menu" aria-hidden="true"
         class="dropdown-menu-xl rm-pointers dropdown-menu dropdown-menu-right">
        <div class="dropdown-menu-header mb-0">
            <div class="dropdown-menu-header-inner bg-deep-blue">
                <div class="menu-header-image opacity-1" style="background-image: url('images/dropdown-header/city3.jpg');"></div>
                <div class="menu-header-content text-dark">
                    <h5 class="menu-header-title">Notifications</h5>
                    <h6 class="menu-header-subtitle">
                        You have
                        <b>@NotificationCount</b> unread messages
                    </h6>
                </div>
            </div>
        </div>
        <ul class="tabs-animated-shadow tabs-animated nav nav-justified tabs-shadow-bordered p-3">
            <li class="nav-item">
                <a role="tab" class="nav-link active"
                   data-bs-toggle="tab" href="#tab-messages-header">
                    <span>Notifications</span>
                </a>
            </li>
            <li class="nav-item">
                <a role="tab" class="nav-link" data-bs-toggle="tab" href="#tab-events-header">
                    <span>Events</span>
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="tab-messages-header" role="tabpanel">
                <div class="scroll-area-sm">
                    <div class="scrollbar-container">
                        <div class="p-0">
                            <ul class="todo-list-wrapper list-group list-group-flush">
                                @if (_nofication != null)
                                {
                                    @if (_nofication.NotificationCount > 0)
                                    {
                                        @foreach (var item in _nofication.NotificationList)
                                        {
                                            @if (item.IsRead == false)
                                            {

                                                <li class="list-group-item" style="padding: unset !important">
                                                    @if (item.NoticeTitle == "Leave Permission request")
                                                    {
                                                        <div class="todo-indicator bg-dark"></div>
                                                    }
                                                    else if (item.NoticeTitle == "Travel Order Request")
                                                    {
                                                        <div class="todo-indicator bg-primary"></div>
                                                    }
                                                    else if (item.NoticeTitle == "Locator Slip Request")
                                                    {
                                                        <div class="todo-indicator bg-danger"></div>
                                                    }
                                                    else
                                                    {
                                                        <div class="todo-indicator bg-warning"></div>
                                                    }
                                                    <button type="button" tabindex="0" class="dropdown-item" @onclick="(() => DecrementNotifCount(item.NoticeHistoryLogsId, 0, userId))" style="display: unset !important; height: 50px">
                                                        <div class="widget-content p-0" style="">
                                                            <div class="widget-content-wrapper">
                                                                <div class="widget-content-left me-2">
                                                                    <div class="avatar-icon">
                                                                        <img src="images/avatars/default-avatar-grey.png" alt="">
                                                                    </div>
                                                                </div>

                                                                <div class="widget-content-left">
                                                                    <div class="avatar-icon-wrapper">
                                                                        <div class="icon">
                                                                            <i class="pe-7s-mail" style="font-size: 20px; color: red; margin-top: 2px !important;"></i>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="widget-content-left">
                                                                    <div class="widget-heading">@item.NoticeTitle</div>
                                                                    <div class="widget-subheading">@item.RequestedBy</div>
                                                                </div>

                                                                <div class="widget-content-right">
                                                                    <div class="font-size-sm text-muted">
                                                                        <small class="opacity-5 pe-1">@item.TimeAgo</small>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </button>
                                                </li>

                                            }
                                            else
                                            {
                                                <li class="list-group-item" style="padding: unset !important">
                                                    @if (item.NoticeTitle == "Leave Permission request")
                                                    {
                                                        <div class="todo-indicator bg-dark"></div>
                                                    }
                                                    else if (item.NoticeTitle == "Travel Order Request")
                                                    {
                                                        <div class="todo-indicator bg-primary"></div>
                                                    }
                                                    else if (item.NoticeTitle == "Locator Slip Request")
                                                    {
                                                        <div class="todo-indicator bg-danger"></div>
                                                    }
                                                    else
                                                    {
                                                        <div class="todo-indicator bg-warning"></div>
                                                    }
                                                    <button type="button" tabindex="0" class="dropdown-item" @onclick="(() => DecrementNotifCount(item.NoticeHistoryLogsId, 0, userId))" style="display: unset !important; height: 50px">
                                                        <div class="widget-content p-0" style="">
                                                            <div class="widget-content-wrapper">
                                                                <div class="widget-content-left me-2">
                                                                    <div class="avatar-icon">
                                                                        <img src="images/avatars/default-avatar-grey.png" alt="">
                                                                    </div>
                                                                </div>

                                                                <div class="widget-content-left">
                                                                    <div class="avatar-icon-wrapper">
                                                                        <div class="icon">
                                                                            <i class="pe-7s-mail-open" style="font-size: 20px; color: gray; margin-top: 1px !important;"></i>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="widget-content-left">
                                                                    <div class="widget-heading" style="color: gray">@item.NoticeTitle</div>
                                                                    <div class="widget-subheading" style="color: gray">@item.RequestedBy</div>
                                                                </div>
                                                                <div class="widget-content-right">
                                                                    <div class="font-size-sm text-muted">
                                                                        <small class="opacity-5 pe-1">@item.TimeAgo</small>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </button>
                                                </li>
                                            }

                                        }
                                    }
                                    else
                                    {
                                        <span style="display: flex; align-items: center; justify-content: center; margin: 0 auto;">No notification found.</span>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="tab-events-header" role="tabpanel">
                <div class="scroll-area-sm">
                    <div class="scrollbar-container">
                        <div class="p-2">
                            <ul class="todo-list-wrapper list-group list-group-flush">
                                <li class="list-group-item">
                                    <div class="todo-indicator bg-warning"></div>
                                    <div class="widget-content p-0">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left me-2">
                                                <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox12" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox12">&nbsp;</label>
                                                </div>
                                            </div>
                                            <div class="widget-content-left">
                                                <div class="widget-heading">
                                                    Wash the car
                                                    <div class="badge bg-danger ms-2">Rejected</div>
                                                </div>
                                                <div class="widget-subheading">
                                                    <i>Written by Bob</i>
                                                </div>
                                            </div>
                                            <div class="widget-content-right widget-content-actions">
                                                <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                </button>
                                                <button class="border-0 btn-transition btn btn-outline-danger">
                                                    <i class="fa fa-trash-alt"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <div class="todo-indicator bg-focus"></div>
                                    <div class="widget-content p-0">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left me-2">
                                                <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox1" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox1">&nbsp;</label>
                                                </div>
                                            </div>
                                            <div class="widget-content-left">
                                                <div class="widget-heading">Task with dropdown menu</div>
                                                <div class="widget-subheading">
                                                    <div>
                                                        By Johnny
                                                        <div class="badge rounded-pill bg-info ms-2">NEW</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="widget-content-right widget-content-actions">
                                                <div class="d-inline-block dropdown">
                                                    <button type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="border-0 btn-transition btn btn-link">
                                                        <i class="fa fa-ellipsis-h"></i>
                                                    </button>
                                                    <div tabindex="-1" role="menu" aria-hidden="true" class="dropdown-menu dropdown-menu-right">
                                                        <h6 tabindex="-1" class="dropdown-header">Header</h6>
                                                        <button type="button" disabled="" tabindex="-1" class="disabled dropdown-item">
                                                            Action
                                                        </button>
                                                        <button type="button" tabindex="0" class="dropdown-item">Another Action</button>
                                                        <div tabindex="-1" class="dropdown-divider"></div>
                                                        <button type="button" tabindex="0" class="dropdown-item">Another Action</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <div class="todo-indicator bg-primary"></div>
                                    <div class="widget-content p-0">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left me-2">
                                                <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox4" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox4">&nbsp;</label>
                                                </div>
                                            </div>
                                            <div class="widget-content-left flex2">
                                                <div class="widget-heading">Badge on the right task</div>
                                                <div class="widget-subheading">This task has show on hover actions!</div>
                                            </div>
                                            <div class="widget-content-right widget-content-actions">
                                                <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                </button>
                                            </div>
                                            <div class="widget-content-right ms-3">
                                                <div class="badge rounded-pill bg-success">Latest Task</div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <div class="todo-indicator bg-info"></div>
                                    <div class="widget-content p-0">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left me-2">
                                                <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox2" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox2">&nbsp;</label>
                                                </div>
                                            </div>
                                            <div class="widget-content-left me-3">
                                                <div class="widget-content-left">
                                                    @*<img class="rounded" src=" images/avatars/1.jpg" alt="" width="42">
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-left">
                                                    <div class="widget-heading">Go grocery shopping</div>
                                                    <div class="widget-subheading">A short description for this todo item</div>
                                                    </div>
                                                    <div class="widget-content-right widget-content-actions">
                                                    <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                    </button>
                                                    <button class="border-0 btn-transition btn btn-outline-danger">
                                                    <i class="fa fa-trash-alt"></i>
                                                    </button>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </li>
                                                    <li class="list-group-item">
                                                    <div class="todo-indicator bg-success"></div>
                                                    <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                    <div class="widget-content-left me-2">
                                                    <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox3" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox3">&nbsp;</label>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-left flex2">
                                                    <div class="widget-heading">Development Task</div>
                                                    <div class="widget-subheading">Finish React ToDo List App</div>
                                                    </div>
                                                    <div class="widget-content-right">
                                                    <div class="badge bg-warning me-2">69</div>
                                                    </div>
                                                    <div class="widget-content-right">
                                                    <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                    </button>
                                                    <button class="border-0 btn-transition btn btn-outline-danger">
                                                    <i class="fa fa-trash-alt"></i>
                                                    </button>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </li>
                                                    <li class="list-group-item">
                                                    <div class="todo-indicator bg-warning"></div>
                                                    <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                    <div class="widget-content-left me-2">
                                                    <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox12" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox12">&nbsp;</label>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-left">
                                                    <div class="widget-heading">
                                                    Wash the car
                                                    <div class="badge bg-danger ms-2">Rejected</div>
                                                    </div>
                                                    <div class="widget-subheading">
                                                    <i>Written by Bob</i>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-right widget-content-actions">
                                                    <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                    </button>
                                                    <button class="border-0 btn-transition btn btn-outline-danger">
                                                    <i class="fa fa-trash-alt"></i>
                                                    </button>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </li>
                                                    <li class="list-group-item">
                                                    <div class="todo-indicator bg-focus"></div>
                                                    <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                    <div class="widget-content-left me-2">
                                                    <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox1" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox1">&nbsp;</label>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-left">
                                                    <div class="widget-heading">Task with dropdown menu</div>
                                                    <div class="widget-subheading">
                                                    <div>
                                                    By Johnny
                                                    <div class="badge rounded-pill bg-info ms-2">NEW</div>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-right widget-content-actions">
                                                    <div class="d-inline-block dropdown">
                                                    <button type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="border-0 btn-transition btn btn-link">
                                                    <i class="fa fa-ellipsis-h"></i>
                                                    </button>
                                                    <div tabindex="-1" role="menu" aria-hidden="true" class="dropdown-menu dropdown-menu-right">
                                                    <h6 tabindex="-1" class="dropdown-header">Header</h6>
                                                    <button type="button" disabled="" tabindex="-1" class="disabled dropdown-item">
                                                    Action
                                                    </button>
                                                    <button type="button" tabindex="0" class="dropdown-item">Another Action</button>
                                                    <div tabindex="-1" class="dropdown-divider"></div>
                                                    <button type="button" tabindex="0" class="dropdown-item">Another Action</button>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </li>
                                                    <li class="list-group-item">
                                                    <div class="todo-indicator bg-primary"></div>
                                                    <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                    <div class="widget-content-left me-2">
                                                    <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox4" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox4">&nbsp;</label>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-left flex2">
                                                    <div class="widget-heading">Badge on the right task</div>
                                                    <div class="widget-subheading">
                                                    This task has show on hover
                                                    actions!
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-right widget-content-actions">
                                                    <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                    </button>
                                                    </div>
                                                    <div class="widget-content-right ms-3">
                                                    <div class="badge rounded-pill bg-success">Latest Task</div>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </li>
                                                    <li class="list-group-item">
                                                    <div class="todo-indicator bg-info"></div>
                                                    <div class="widget-content p-0">
                                                    <div class="widget-content-wrapper">
                                                    <div class="widget-content-left me-2">
                                                    <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox2" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox2">&nbsp;</label>
                                                    </div>
                                                    </div>
                                                    <div class="widget-content-left me-3">
                                                    <div class="widget-content-left">
                                                    @*<img class="rounded" src=" images/avatars/1.jpg" alt="" width="42">*@
                                                </div>
                                            </div>
                                            <div class="widget-content-left">
                                                <div class="widget-heading">Go grocery shopping</div>
                                                <div class="widget-subheading">
                                                    A short description for this todo item
                                                </div>
                                            </div>
                                            <div class="widget-content-right widget-content-actions">
                                                <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                </button>
                                                <button class="border-0 btn-transition btn btn-outline-danger">
                                                    <i class="fa fa-trash-alt"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <div class="todo-indicator bg-success"></div>
                                    <div class="widget-content p-0">
                                        <div class="widget-content-wrapper">
                                            <div class="widget-content-left me-2">
                                                <div class="custom-checkbox custom-control form-check">
                                                    <input type="checkbox" id="exampleCustomCheckbox3" class="form-check-input">
                                                    <label class="form-label form-check-label" for="exampleCustomCheckbox3">&nbsp;</label>
                                                </div>
                                            </div>
                                            <div class="widget-content-left flex2">
                                                <div class="widget-heading">Development Task</div>
                                                <div class="widget-subheading">Finish React ToDo List App</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <div class="badge bg-warning me-2">69</div>
                                            </div>
                                            <div class="widget-content-right">
                                                <button class="border-0 btn-transition btn btn-outline-success">
                                                    <i class="fa fa-check"></i>
                                                </button>
                                                <button class="border-0 btn-transition btn btn-outline-danger">
                                                    <i class="fa fa-trash-alt"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-block text-center card-footer">
            <button class="btn-shadow btn-wide btn-pill btn btn-focus mt-1" @onclick="@(()=>_navigation.NavigateTo("/Mailbox"))">
                @*<span class="badge badge-dot badge-dot-lg bg-warning badge-pulse">Badge</span>*@
                View All Messages
            </button>
        </div>
        @*                    <ul class="nav flex-column">
        <li class="nav-item-divider nav-item"></li>
        <li class="nav-item-btn text-center nav-item">
        <button class="btn-shadow btn-wide btn-pill btn btn-focus btn-sm">View Latest Changes</button>
        </li>
        </ul>*@
    </div>
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    private string userRole { get; set; }
    private string ImgUrl { get; set; }

    private bool _hideTextLogo { get; set; } = true;

    private string? CurrUrl = null;
    private string? CurrAbsoluteUrl = null;
    private string userId = string.Empty;
    private string keyword = string.Empty;

    private int NotificationCount { get; set; } = 0;

    private string theTime;
    Timer aTimer;

    public HRMSv4.Shared.OnBoarding.SystemParameterViewModel parameterModel = new HRMSv4.Shared.OnBoarding.SystemParameterViewModel();
    private HRMSv4.Client.Shared.Modals.ProfileModal compModal = new HRMSv4.Client.Shared.Modals.ProfileModal();
    HRMSv4.Shared.Notification.NotificationView _nofication = new HRMSv4.Shared.Notification.NotificationView();
    public HRMSv4.Shared.Notification.NoticeHistoryLog _noticeHistoryLog { get; set; } = new HRMSv4.Shared.Notification.NoticeHistoryLog();

    static public bool isImageExists(int empId, string fileName)
    {
        bool result = false;

        var imgLocation = Path.Combine("Uploads/Employees", "Avatar");

        var pathToSave = Path.Combine(imgLocation, Convert.ToString(empId));

        if (File.Exists(pathToSave + "/" + fileName))
        {
            result = true;
        }
        else
        {
            result = false;
        }
        return result;
    }

    protected override async Task OnInitializedAsync()
    {
        string paramId = string.Empty;
        int employeeId = 0;

        var user = (await _AutService.GetAuthenticationStateAsync()).User;
        userId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
        var LoginAvatar = await localStorage.GetItemAsync<string>("ImageName");

        var _encryptedId = await localStorage.GetItemAsync<string>(">>redd");

        if (!string.IsNullOrWhiteSpace(_encryptedId))
        {
            string hexEmployeeId = _crypto.ConvertHexToString(_encryptedId, System.Text.Encoding.Unicode);

            if (!string.IsNullOrWhiteSpace(hexEmployeeId))
            {
                employeeId = int.Parse(paramId);
            } else
            {
                employeeId = 0;
            }
        }

        //get initial loading of count of notifications
        NotificationCount = await mailService.NotificationCounter(false, employeeId, userId);

        //HubConnection.On<SignalRCarrier>("RequestProfileUpdate", async survey =>
        //{
        //    //await _header.NotificationList(0);
        //    NotificationCount = NotificationCount + 1;
        //    StateHasChanged();
        //});

        HubConnection.On<NotificationRequest>("NotificationCounter", async survey =>
        {
            int decryptedParam = int.Parse(_crypto.ConvertHexToString(survey.To, System.Text.Encoding.Unicode));

            var getEmployee = await empService.Get(decryptedParam);
            if (getEmployee != null && userId == getEmployee.UserId)
            {
                //await _header.NotificationList(0);
                NotificationCount = await mailService.NotificationCounter(false, decryptedParam, "");
                StateHasChanged();
            }

        });

        //string DecodeImg = await Crypto.DecryptAsync(ImgEncrypt);
        string isGender = user.FindFirst(c => c.Type.Contains("gender"))?.Value;

        userRole = user.FindFirst(c => c.Type.Contains("role"))?.Value;

        CurrUrl = _navigation.Uri.ToString();
        CurrAbsoluteUrl = _navigation.ToAbsoluteUri(CurrUrl).ToString();

        //aTimer = new Timer(Tick, null, 0, 1000);

        this.StateHasChanged();
    }

    private void HandleclickTextLogo()
    {
        if (!_hideTextLogo)
        {
            _hideTextLogo = true;
        }
        else
        {
            _hideTextLogo = false;
        }
        StateHasChanged();
    }

    private void Tick(object _)
    {
        theTime = DateTime.Now.ToLongTimeString();
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        HubConnection.Remove("RequestProfileUpdate");
        aTimer?.Dispose();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnParametersSetAsync()
    {
        var user = (await _AutService.GetAuthenticationStateAsync()).User;

        if (!user.Identity.IsAuthenticated)
        {
            _navigation.NavigateTo("/");
        }
    }

    async Task ShowNotification()
    {
        /* Get List of Notificaiton */
        /* May error please check */
        var user = (await _AutService.GetAuthenticationStateAsync()).User;
        userId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
        /* Get Employee ID
         * Interface
         * Service
         * Controller
         * Return int
         */

        /* Get Employee Id */
        int employeeId = await _header.GetEmployeeId(userId);

        /* To get Notification */
        _nofication = await _header.NotificationList(employeeId);

        StateHasChanged();
    }

    public async void DecrementNotifCount(int notificationId, int employeeId, string? userId)
    {
        try
        {
            /* Interface/Service/Controller */
            /* NoficatoinUpdate */
            /* isRead = true
            * db.Update(notification)
            * db.savechangesasync()
            *
           */
            HRMSv4.Shared.Notification.NotificationCounterView counterView = new HRMSv4.Shared.Notification.NotificationCounterView();
            counterView.NoticeHistoryLogsId = notificationId;
            counterView.EmployeeId = employeeId;
            counterView.UserId = userId;
            NotificationCount = await mailService.UpdateNotification(counterView);

            StateHasChanged();

        }
        catch (Exception)
        {

            throw;
        }


        //var IsRead = _noticeHistoryLog.IsRead;
        //IsRead = true;
    }

    async Task Signout()
    {
        SweetAlertResult result = await _Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Are you leaving?",
                Text = "Are you sure want to log out? All your unsaved data will be lost.",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                ConfirmButtonText = "Yes",
                CancelButtonText = "No",
                CancelButtonColor = "#999999"
            });

        if (!string.IsNullOrEmpty(result.Value))
        {
            var user = (await _AutService.GetAuthenticationStateAsync()).User;
            string userId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
            await _authInterfaceService.Logout(userId);
            _navigation.NavigateTo("/");
        }
    }

    async Task ShowModal()
    {
        var options = new ModalOptions()
            {
                DisableBackgroundCancel = true,
                Animation = ModalAnimation.FadeIn(0.2),
                ContentScrollable = true,
            };

        var resultForm = Modal.Show<ProfileModal>("Company Profile", options);

        var result = await resultForm.Result;

        await UpdateCompanyAvatar();
    }

    void HrPolicy()
    {
        _navigation.NavigateTo("/policies");
    }

    void ChangePassword()
    {
        var parameters = new ModalParameters();
        var options = new ModalOptions()
            {
                DisableBackgroundCancel = true
            };
        parameters.Add(nameof(HRMSv4.Client.Shared.Modals.ChangePasswordModal.userId), userId);

        Modal.Show<HRMSv4.Client.Shared.Modals.ChangePasswordModal>("Change Password", parameters, options);
    }

    void HandleKeyPress(KeyboardEventArgs args)
    {
        if (args.Key.Equals("Enter"))
        {
            _navigation.NavigateTo("/search?keyword=" + keyword);
        }
    }

    void HandleCloseSearch()
    {
        switch (userRole)
        {
            case RoleConstants.DefaultRole:
                _navigation.NavigateTo("dashboard-administrator");
                break;
            case RoleConstants.EmployeeRole:
                _navigation.NavigateTo($"dashboard-employee/{userId}");
                break;
        }
    }

    async void EmpNavigation(MouseEventArgs e)
    {
        var beforeUrlEncoded = await localStorage.GetItemAsync<string>(">>redd");

        if (!string.IsNullOrWhiteSpace(beforeUrlEncoded))
        {
            if (userRole == RoleConstants.EmployeeRole)
            {
                _navigation.NavigateTo($"/dashboard/employee/{beforeUrlEncoded}");

            }
            else
            {
                _navigation.NavigateTo($"/dashboard/applicant/{beforeUrlEncoded}");
            }
        }
    }

    public async void UpdateAvatar()
    {
        string paramId = string.Empty;

        //localStorage.SetItem("arvin", value);

        var LoginAvatar = await localStorage.GetItemAsync<string>("ImageName");
        var EmpIdEncrypt = await localStorage.GetItemAsync<string>(">>redd");

        if (!string.IsNullOrWhiteSpace(EmpIdEncrypt))
        {
            //string DecodedUrl = string.Empty;
            //string replacement = "ItIsSlashReplacement";
            //DecodedUrl = EmpIdEncrypt.Replace(replacement, "/");

            paramId = _crypto.ConvertHexToString(EmpIdEncrypt, System.Text.Encoding.Unicode);
            //await Crypto.DecryptAsync(DecodedUrl);
        }

        //string DecodeImg = await Crypto.DecryptAsync(ImgEncrypt);

        if (!string.IsNullOrWhiteSpace(LoginAvatar))
        {
            if (LoginAvatar == "default-avatar-grey.png")
            {
                ImgUrl = "images/avatars/" + LoginAvatar;
            }
            else
            {
                ImgUrl = "Uploads/Employees/Avatar/" + int.Parse(paramId) + "/" + LoginAvatar;
            }
            /* Note that the following line is necessary because otherwise
            Blazor would not recognize the state change and not refresh the UI */
            await InvokeAsync(() =>
              {
                  StateHasChanged();
              });
        }
    }

    public async Task UpdateCompanyAvatar()
    {
        string paramId = string.Empty;


        var LoginAvatar = await localStorage.GetItemAsync<string>("ImageName");

        //string DecodeImg = await Crypto.DecryptAsync(ImgEncrypt);

        if (!string.IsNullOrWhiteSpace(LoginAvatar))
        {
            if (LoginAvatar == "default-avatar-grey.png")
            {
                ImgUrl = "images/avatars/" + LoginAvatar;
            }
            else
            {
                ImgUrl = "Uploads/Companies/Avatar/" + LoginAvatar;
            }
            /* Note that the following line is necessary because otherwise
            Blazor would not recognize the state change and not refresh the UI */
            await InvokeAsync(() =>
              {
                  StateHasChanged();
              });
        }
    }
}
